PAGEL           .equ 0x00
PAGEH           .equ 0x01
PID             .equ 0x02
CLRINT          .equ 0x03
INT_SOURCE_1    .equ 0x04
INT_SOURCE_2    .equ 0x05
RAMEN           .equ 0x06
GOUSR           .equ 0x07

VERA_ADDR_L     .equ 0x20
VERA_ADDR_M     .equ 0x21
VERA_ADDR_H     .equ 0x22
VERA_DATA0      .equ 0x23
VERA_DATA1      .equ 0x24

VERA_CTRL       .equ 0x25
VERA_IEN        .equ 0x26
VERA_ISR        .equ 0x27
VERA_IDQLINE_L  .equ 0x28
VERA_SCANLINE_L .equ 0x28

VERA_DC_VIDEO   .equ 0x29
VERA_DC_HSCALE  .equ 0x2a
VERA_DC_VSCALE  .equ 0x2b
VERA_DC_BORDER  .equ 0x2c

VERA_DC_HSTART  .equ 0x29
VERA_DC_HSTOP   .equ 0x2a
VERA_DC_VSTART  .equ 0x2b
VERA_DC_VSTOP   .equ 0x2c

VERA_L0_CONFIG   .equ 0x2d
VERA_L0_MAPBASE  .equ 0x2e
VERA_L0_TILEBASE .equ 0x2f

KMI_DATA        .equ 0x40
KMI_COMMAND     .equ 0x41
KMI_STATUS      .equ 0x41

ATARI           .equ 0x60

NMICounter      .equ 0x8000

;Top 4 bits of page table:
; bit 15: WP, 1=disable writing
; bit 14: WI, 0=generate interrupt on write
; bit 13: NX/XE 1/0=generate interrupt on M1 cycle
; bit 12: RI 0=generate interrupt on read.

    .org 0x0000

    jp ROMreset
    ; .org 0x0008
    ; .org 0x0010
    ; .org 0x0018
    ; .org 0x0020
    ; .org 0x0028
    ; .org 0x0030
    .org 0x0038
    ret
    .org 0x0066
    push af
    push bc
    push de
    push hl
    ; in a,(INT_SOURCE_1)
    ; call printBin
    ld a,(NMICounter)
    inc a
    ld (NMICounter),a
    ld de,0x0524
    call printBin
    out (CLRINT),a
    ld a,0x07
    out (VERA_ISR),a
    ld hl,MESSAGE2
    ld b,10
    ld de,0x0100
    call printString
    out (GOUSR),a
    pop hl
    pop de
    pop bc
    pop af
    ret
nmitriggered:
    ld d,5
    ld a,0xf8
    ld i,a
loop3:
    dec d
    jr nz,loop3
    dec e
    jr nz,loop3
    ld a,0x8f
    ld i,a
loop4:
    dec d
    jr nz,loop4
    dec e
    jr nz,loop4
    jp nmitriggered

    .org 0x100
ROMreset:
VERAinit:
    .waitvera:
    ld a,0x24
    out (VERA_ADDR_L),a
    in a,(VERA_ADDR_L)
    cp a,0x24
    jp nz,.waitvera

    ld a,0b00010001
    out (VERA_DC_VIDEO),a
    ld a,0b01100000
    out (VERA_L0_CONFIG),a
    ld a,0b01000010
    out (VERA_L0_TILEBASE),a

    ld a,0b00000000
    out (VERA_CTRL),a

    ld a,0
    out (VERA_ADDR_L),a
    ld a,0b10000000
    out (VERA_ADDR_M),a
    ld a,0b00010000
    out (VERA_ADDR_H),a

    ld bc,0x1000
    ld hl,font
    .loadfont:
    ld a,(hl)
    out (VERA_DATA0),a
    inc hl
    dec c
    jp nz,.loadfont
    dec b
    jp nz,.loadfont

    out (VERA_CTRL),a
    ld a,0
    out (VERA_ADDR_L),a
    ld a,0
    out (VERA_ADDR_M),a
    ld a,0b00010000
    out (VERA_ADDR_H),a
    ld bc,16384
    .fillVRAM:
    ld a,0x00
    out (VERA_DATA0),a
    ld a,0x01
    out (VERA_DATA0),a
    dec c
    jp nz,.fillVRAM
    dec b
    jp nz,.fillVRAM


RAMinit:
    ld a,0b10000000         ;process number=0, SYSGATE=1
    out (PID),a             ;set process ID
    ld c,PAGEL
    ld b,0
    .loadPageL:
    ld a,b
    out (c),a
    inc b
    jp nz,.loadPageL

    ld c,PAGEH
    ld b,0
    ld d,0x70       ;enable everything
    .loadPageH:
    out (c),d
    inc b
    jp nz,.loadPageH

    ld bc,0x8000    ;32KiB to copy
    ld de,0         ;source start address
    ld hl,0         ;destination start address
    ldir            ;copy data
    ld sp,0xffff    ;initialize stack
    in a,(RAMEN)    ;start running in RAM

initComplete:
    LD HL,MESSAGE
    LD B,10
    LD DE,0
    CALL printString


    ld a,0x00
    ld i,a
    out (CLRINT),a
    ld a,0b00000001
    out (VERA_IEN),a
    out (GOUSR),a
infwait:
    jp infwait

KMITest:
    LD A,0Xaa
    OUT (KMI_COMMAND),A

    LD A,0X88
    LD I,A
    call waitamoment
    ld a,0xff
    ld i,a
    in a,(KMI_DATA)
    cp 0x55
    jp nz,nmitriggered
    ld a,0x60
    out (KMI_COMMAND),a
    call waitamoment
    ld a,0b01100100
    out (KMI_DATA),a
    .shiftByte:
    call waitamoment
    ld a,0xd1
    out (KMI_COMMAND),a
    call waitamoment
    ld a,0b00000011
    out (KMI_DATA),a
    call waitamoment
    ld a,0xd1
    out (KMI_COMMAND),a
    call waitamoment
    ld a,0b00000001
    out (KMI_DATA),a
    call waitamoment
    ld b,8
    .shiftbit:
    ld a,0xc0
    out (KMI_COMMAND),a
    call waitread
    in a,(KMI_DATA)
    and 0b00000100
    scf
    jr z,.bitis1
    ccf
    .bitis1:
    rl d
    ld a,0xfe
    out (KMI_COMMAND),a
    call waitamoment
    dec b
    jr nz,.shiftbit
    ld a,d
    call printBin
    JP .shiftByte

waitread:
    push af
waitreadloop:
    in a,(KMI_STATUS)
    and 0b00000001
    jr nz,waitreadloop
    pop af
    push bc
    ld b,50
waittestkmi2:
    dec b
    jr nz,waittestkmi2
    pop bc
    ret

waitamoment:
    push bc
    ld b,0
waittestkmi:
    dec b
    jr nz,waittestkmi
    pop bc
    ret

printString:            ;B=length, HL=pointer, DE=location
    ld a,e
    sla a
    out (VERA_ADDR_L),a
    ld a,d
    OUT (VERA_ADDR_M),A
    LD A,0B00100000
    OUT (VERA_ADDR_H),A
    .OUTCHAR:
    ld a,(hl)
    out (VERA_DATA0),A
    INC HL
    DJNZ .OUTCHAR
    RET

printBin:               ;A=number, DE=location
    PUSH AF
    LD A,e
    sla a
    out (VERA_ADDR_L),a
    ld a,d
    out (VERA_ADDR_M),A
    LD A,0B00100000
    OUT (VERA_ADDR_H),A
    POP AF
    LD C,VERA_DATA0
    LD D,8
    .PRINTBIT:
    LD B,'1'
    RLC A
    JR C,.BIT1
    LD B,'0'
    .BIT1:
    OUT (C),B
    DEC D
    JR NZ,.PRINTBIT
    RET

MESSAGE:
    .DB 'HELLO!!!!!'
MESSAGE2:
    .DB 'MESSAGE2  '
    .org 0x7000
font:
    .incbin "HEC1FNT.bin"