GOUSR           .equ 0x07
CLRINT          .equ 0x03
RAMEN           .equ 0x06
PAGEL           .equ 0x00
PAGEH           .equ 0x01

VERA_ADDR_L     .equ 0x20
VERA_ADDR_M     .equ 0x21
VERA_ADDR_H     .equ 0x22
VERA_DATA0      .equ 0x23
VERA_DATA1      .equ 0x24

VERA_CTRL       .equ 0x25
VERA_IEN        .equ 0x26
VERA_ISR        .equ 0x27
VERA_IDQLINE_L  .equ 0x28
VERA_SCANLINE_L .equ 0x28

VERA_DC_VIDEO   .equ 0x29
VERA_DC_HSCALE  .equ 0x2a
VERA_DC_VSCALE  .equ 0x2b
VERA_DC_BORDER  .equ 0x2c

VERA_DC_HSTART  .equ 0x29
VERA_DC_HSTOP   .equ 0x2a
VERA_DC_VSTART  .equ 0x2b
VERA_DC_VSTOP   .equ 0x2c

VERA_L0_CONFIG   .equ 0x2d
VERA_L0_MAPBASE  .equ 0x2e
VERA_L0_TILEBASE .equ 0x2f

ATARI           .equ 0x60

    .org 0x0000

    jp ROMreset
    ; .org 0x0008
    ; .org 0x0010
    ; .org 0x0018
    ; .org 0x0020
    ; .org 0x0028
    ; .org 0x0030
    ; .org 0x0038
    .org 0x0066
    jp nmitriggered
testflash:
    ld a,0xff
    ld i,a
    ld e,0x10
loop1:
    djnz loop1
    dec e
    jr nz,loop1
    ld a,0xf8
    ld i,a
    ld e,0x10
loop2:
    djnz loop2
    dec e
    jr nz,loop2
    jp testflash


    .org 0x100
ROMreset:
    ld a,0xff
    ld i,a
waitvera:
    ld a,0x24
    out (VERA_ADDR_L),a
    in a,(VERA_ADDR_L)
    cp a,0x24
    jp nz,waitvera

    ld a,0b00010001
    out (VERA_DC_VIDEO),a
    ld a,0b01100000
    out (VERA_L0_CONFIG),a
    ld a,0b01000010
    out (VERA_L0_TILEBASE),a

    ld a,0x00000000
    out (VERA_CTRL),a
    ld a,0
    out (VERA_ADDR_L),a
    ld a,0b10000000
    out (VERA_ADDR_M),a
    ld a,0b00010000
    out (VERA_ADDR_H),a

    ld bc,0x1000
    ld hl,font
loadfont:
    ld a,(hl)
    out (VERA_DATA0),a
    inc hl
    dec c
    jp nz,loadfont
    dec b
    jp nz,loadfont

    out (VERA_CTRL),a
    ld a,0
    out (VERA_ADDR_L),a
    ld a,0
    out (VERA_ADDR_M),a
    ld a,0b00010000
    out (VERA_ADDR_H),a
    ld bc,16384
fillVRAM:
    ld a,0x00
    out (VERA_DATA0),a
    ld a,0x01
    out (VERA_DATA0),a
    dec c
    jp nz,fillVRAM
    dec b
    jp nz,fillVRAM


    out (CLRINT),a
RAMinit:
    ld c,PAGEL
    ld b,0
loadPageL:
    ld a,b
    out (c),a
    inc b
    jp nz,loadPageL

    ld c,PAGEH
    ld b,0
    ld a,0x80
    ld d,0x70
loadPageH1:
    out (c),d
    inc b
    cp b
    jp nz,loadPageH1
    ld d,0x50
loadPageH2:
    out (c),d
    inc b
    jp nz,loadPageH2
    ld bc,0x400
    ld de,0
    ld hl,0
    ldir
    ld sp,0xffff
    in a,(RAMEN)
    call calltest
success:
    ld a,h
    ld i,a
    ; ld e,40
successloop1:
    dec d
    jp nz,successloop1
    dec e
    jp nz,successloop1
    ld a,l
    ld i,a
    ld e,0x80
successloop2:
    dec d
    jp nz,successloop2
    dec e
    jp nz,successloop2
    jp success
nmiexit:
    ; out (CLRINT),a
    ; out (GOUSR),a
    ; rst 0x08


nmitriggered:
    ld d,5
    ld a,0xff
    ld i,a
    ld e,0x10
loop3:
    djnz loop3
    dec e
    jr nz,loop3
    ld a,0x8f
    ld i,a
    ld e,0x10
loop4:
    djnz loop4
    dec e
    jr nz,loop4
    dec d
    ; jp nz,nmitriggered
    jp nmitriggered

ROMNMI:
    jp RAMinit

calltest:
    ld a,0x8f
    ld i,a
    ld e,0x10
loop5:
    djnz loop5
    dec e
    jr nz,loop5
    ld a,0xf8
    ld i,a
    ld e,0x10
loop6:
    djnz loop6
    dec e
    jr nz,loop6
    ret

    .org 0x7000
font:
    .incbin "HEC1FNT.bin"